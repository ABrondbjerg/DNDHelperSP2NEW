### A simple get request to the test endpoint. No need for login
GET {{url}}/auth/test/

### Create a new user - this one will only get a USER role by default
POST {{url}}/auth/register/

{
    "username": "user",
    "password": "test123"
}

###
POST {{url}}/auth/login/

{
    "username": "user",
    "password": "test123"
}

> {%
    client.global.set("jwt_token", response.body.token);
    console.log("JWT Token:", client.global.get("jwt_token"));
%}

### Add admin role to user
POST {{url}}/auth/user/addrole/
Accept: application/json
Authorization: Bearer {{jwt_token}}

{
    "role": "admin"
}
Accept: application/json
Authorization: Bearer {{jwt_token}}



### TOWN

### Populate datbase with towns
GET {{url}}/town/populate/


### Get all towns including shops
GET {{url}}/town/


### Get specific town by ID (ID 1 in this example)
GET {{url}}/town/1


### Update specific town by ID
PUT http://localhost:7070/api/town/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "name": "Updated town Name",
  "description": "Updated town description",
  "features": "Updated town features"
}


### Create a new town
POST {{url}}/town/
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "name": "New Town Name",
  "description": "New town description",
  "features": "New town features"
}


### Delete a town by ID including shops (ID 1 in this example)
DELETE {{url}}/town/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}



// Shop API

### Populate datbase with shops
GET {{url}}/shop/populate/


### Get all shops
GET {{url}}/shop/


### Get specific shop by ID (ID 1 in this example)
GET {{url}}/shop/1


### Update specific shop by ID
PUT http://localhost:7070/api/shop/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "name": "Updated shop Name",
  "shoptype": "WEAPONSMITH",
  "owner": "Updated shop features"
}


### Create a new shop
POST {{url}}/shop/
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "name": "New shop Name",
  "shoptype": "BLACKSMITH",
  "owner": "New shop features"
}


### Delete a shop by ID (ID 1 in this example)
DELETE {{url}}/shop/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

### A simple get request to the test endpoint. No need for login
GET {{url}}/auth/test/

### Populate the database with some data
GET {{url}}/hotels/populate/

### Create a new user - this one will only get a USER role by default
POST {{url}}/auth/register/

{
    "username": "user",
    "password": "test123"
}

###
POST {{url}}/auth/login/

{
    "username": "user",
    "password": "test123"
}

> {%
    client.global.set("jwt_token", response.body.token);
    console.log("JWT Token:", client.global.get("jwt_token"));
%}

###
GET {{url}}/protected/user_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/protected/admin_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Add admin role to user
POST {{url}}/auth/user/addrole/
Accept: application/json
Authorization: Bearer {{jwt_token}}

{
    "role": "admin"
}
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/hotels
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/hotels/2

###
POST {{url}}/hotels
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "hotelName": "Holiday Inn",
  "hotelAddress": "Stuttgart",
  "hotelType": "STANDARD"
}

###
PUT {{url}}/hotels/3
Content-Type: application/json

{
  "hotelName": "Ritz Carlton",
  "hotelAddress": "London City",
  "hotelType": "LUXURY"
}

###
DELETE {{url}}/hotels/5
Authorization: Bearer {{jwt_token}}

// Room API
###
GET {{url}}/rooms
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/rooms/1
Authorization: Bearer {{jwt_token}}

###
POST {{url}}/rooms/hotel/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "roomNumber": 11,
  "roomPrice": 1150,
  "roomType": "SINGLE"
}
